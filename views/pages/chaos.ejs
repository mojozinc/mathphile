<!DOCTYPE html>
<html>
	<head>
		<title>Order in Chaos</title>
		<style>
			p{font-family: monospace;}
		</style>
	</head>
	<body>
		<p>
			1. take a n sided polygon<br>
			2. pick any point in the plane,trace it<br>
			3. pick any vertex of the polygon at random<br>
			4. move some percentage of the way towards the vertex,trace it<br>
			5. repeat this 1000 times<br><br>

			from randomness we get these beautifully symmetric shapes<br>
			try 3,0.5 or 5,0.62 ; can you find other pairs?
		</p>
		<input type="button" value="start" id="start" onclick="startDrawing()">
		<input type="button" value="stop" id="stop" onclick="stopDrawing()">
		<input type="button" value="clear" id="clear" onclick="ctx.clearRect(0,0,canvas.width,canvas.height)">

		<br>
		<label>No. of Vertices</label>
		<input type="range" min="1" max="20" id="vertex_slider" value="3">
		<input type="number" id="vertices" value="3">
		
		<br>
		<label>Stride fraction:</label>
		<input type="range" min="0.1" max="1" id="stride_slider" value="0.5" step="0.01">
		<input type="number" id="stride" value="0.5" step="0.01">

		<br>
		<label>Point Size:</label>
		<input type="range" min="0.1" max="5" id="pointsize_slider" value="1" step="0.1">
		<input type="number" id="pointsize" value="1" step="0.1">

		<canvas></canvas>
	</body>
	<script id="config">
		canvas = document.getElementsByTagName('canvas')[0];
		h = window.innerHeight-25;
		w = document.body.clientWidth;
		canvas.setAttribute("height",h);
		canvas.setAttribute("width",w);
		ctx = canvas.getContext('2d');
		iterations = 10000;
		keepDrawing = true;
		trackerPoint = 0;
	</script>
	<script id = "utils">
		randInt = function(limit){
			limit = limit || 1000;
			return parseInt(Math.random()*limit*10)%limit
		}
		randomPoint = function(){
			return {x:randInt()%w,y:randInt()%h};
		}
		window.painter = {}
		window.painter.point=function (x,y,size,color){
			var r = size*1;
			ctx.beginPath()
			ctx.arc(x,y,r,0,2*Math.PI);
			ctx.stroke();
			if(color){
				ctx.fillStyle = color;
				ctx.fill();
			}
		}
		window.painter.track = function(){
				var v = vertices[randInt()%vertices.length];
				var t = trackerPoint;
				var Dy = v.y - t.y,Dx = v.x - t.x;
				t = trackerPoint = {
					x: t.x + Dx*stride.value,
					y: t.y + Dy*stride.value
				}
				painter.point(t.x,t.y,pointsize.value,'black');
			}
		startDrawing = function(){
			setup();
			trackerPoint = randomPoint();
			keepDrawing = true;
			var pulse = 5;
			var infiloop = function(){
				if(!keepDrawing)
					return 
				painter.track()
				setTimeout(infiloop,pulse);
				}

			setTimeout(infiloop,pulse);
			}	

		stopDrawing = function(){
			keepDrawing = false;
		}

	</script>
	<script type="text/javascript">
		plot_vertices = function(numberofvertices){
			vertices = [];
			vertexCount = parseInt(numberofvertices);		
			var alpha = 2*Math.PI/vertexCount;
			for(var i = 0 ; i < vertexCount; i++){
				
				var p = {
					x: 600+250*Math.cos(alpha*i) ,
					y: 300+250*Math.sin(-alpha*i)
				}
				vertices.push(p);
				painter.point(p.x,p.y,2,'red');
			}
		}
		setup = function(){
			var v = document.getElementById("vertices");
			var s = document.getElementById("stride");
			var v_slider = document.getElementById("vertex_slider");
			var s_slider = document.getElementById("stride_slider");

			var b_start = document.getElementById("start");
			var b_stop = document.getElementById("stop");
			var b_clear = document.getElementById("clear");
			
			v_slider.onchange = function(){
				v.value = v_slider.value
				v.onchange()
			}
			s_slider.onchange = function(){
				s.value = s_slider.value
				s.onchange()
			}

			pointsize_slider.onchange = function(){
				pointsize.value = pointsize_slider.value
				pointsize.onchange();
			}

			v.onchange = s.onchange = pointsize.onchange = function(){
				plot_vertices(v.value)
				b_clear.click()
				b_start.click()
			}

			plot_vertices(v.value)
		}
		setup();
		
		// Events
	</script>
</html>